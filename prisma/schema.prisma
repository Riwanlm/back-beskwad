generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id            BigInt   @id @default(autoincrement())
  email         String   @unique(map: "unique_email")
  username      String
  created_at    DateTime @default(now()) @db.Timestamptz(6)
  password_hash String
  events events[] @relation("UserEvents")
  registrations event_registrations[] @relation("UserRegistrations")
}

model events {
  id          BigInt    @id @default(autoincrement())
  title       String
  description String?
  location    String
  date        DateTime  @db.Timestamptz(6)
  id_user     BigInt
  created_at  DateTime @default(now()) @db.Timestamptz(6)
  update_at   DateTime  @default(now()) @db.Timestamptz(6)
  user users @relation("UserEvents", fields: [id_user], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_events_id_user")
  registrations event_registrations[] @relation("EventRegistrations")

  @@index([id_user], map: "idx_events_id_user")
  @@index([date], map: "idx_events_date")
}

model event_registrations {
  id       BigInt @id @default(autoincrement())
  id_user  BigInt
  id_event BigInt
  created_at DateTime @default(now()) @db.Timestamptz(6)

  user  users  @relation("UserRegistrations", fields: [id_user], references: [id], onDelete: Cascade)
  event events @relation("EventRegistrations", fields: [id_event], references: [id], onDelete: Cascade)

  @@unique([id_user, id_event], map: "unique_user_event_registration")
  @@index([id_user], map: "idx_registrations_user")
  @@index([id_event], map: "idx_registrations_event")
}